{"version":3,"sources":["Chart.js","PayloadField.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","React","useState","toggle","dateTicks","setDateTicks","currentSelection","setCurrenSelection","min","max","setBrushState","deliveries","location","state","useEffect","events","map","id","completed_at","response_status","event","started_at","finalData","time_total","Date","parse","primary","timestamp","secondary","radius","dates","moments","d","moment","startDate","endDate","range","currDate","startOf","lastDate","add","diff","push","clone","toISOString","dateRanges","e","label","data","console","log","axes","useMemo","type","position","tickValues","hardMin","hardMax","series","brush","onSelect","brushData","Math","start","end","to","Typography","Button","color","Grid","container","justify","item","xs","md","lg","Paper","style","width","height","Tooltip","title","IconButton","disabled","onClick","aria-label","primaryCursor","showLabel","tooltip","JSON","stringify","PayloadField","history","payload","setPayload","align","onSubmit","preventDefault","stopPropagation","pathname","TextField","multiline","variant","fullWidth","onChange","target","value","rows","placeholder","App","CssBaseline","alignItems","spacing","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a72bd0f2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Chart as ReactChart } from 'react-charts'\nimport moment from 'moment'\n\nfunction dateRanges(dates) {\n  const moments = dates.map(d => moment(d))\n  const startDate = moment.min(moments)\n  const endDate = moment.max(moments)\n \n  var range = [];\n  var currDate = moment(startDate).startOf('day');\n  var lastDate = moment(endDate).startOf('day');\n\n  while(currDate.add(1, 'days').diff(lastDate) < 0) {\n      range.push(currDate.clone().toISOString());\n  }\n\n  return range;\n}\n\nexport function Chart(props) {\n  const [ toggle, setToggle ] = React.useState(false)\n  const [ dateTicks, setDateTicks ] = React.useState([])\n  const [ currentSelection, setCurrenSelection ] = React.useState({})\n  const [{ min, max }, setBrushState] = React.useState({\n    min: null,\n    max: null,\n  });\n  const deliveries = props.location.state\n\n  React.useEffect(() => {\n    // id, completed_at, response_status, event, started_at\n    const events = deliveries.map(({ id, completed_at, response_status, event, started_at }) => ({ id, completed_at, response_status, ...event, started_at }))\n    \n    \n    // create a duration key calculated from completed_at and start_at, return object that with keys for axsis\n    const finalData =\n    events.map((event) => {\n      event.time_total =  (Date.parse(event.completed_at) - Date.parse(event.started_at)) / 1000\n      return { primary: new Date(event.timestamp), secondary: event.time_total, radius: (event.time_total * 1.5), ...event }\n    } , {})\n\n    setDateTicks(\n      dateRanges(events.map(e => e.timestamp))\n    )\n\n    setCurrenSelection([{label: 'webhook durations', data: finalData}])\n    console.log('useEffect chart')\n  }, [deliveries])\n  \n  const axes = React.useMemo(\n    () => [\n      {\n        primary: true,\n        type: 'utc',\n        position: 'bottom',\n        tickValues: dateTicks,\n        hardMin: min,\n        hardMax: max,\n      },\n    { type: 'linear', position: 'left' },\n  ], [dateTicks, min, max])\n\n  const series = React.useMemo(() => ({ type: 'bubble' }), [])\n\n  const brush = React.useMemo(\n    () => ({\n      onSelect: (brushData) => {\n        console.log(brushData);\n        setBrushState({\n          min: Math.min(brushData.start, brushData.end),\n          max: Math.max(brushData.start, brushData.end),\n        });\n      },\n    }),\n    []\n  );\n\n  const resetBrush = () => setBrushState({min: null, max: null})\n\n  const handleToggle = () => setToggle(t => !t) //! debug, can remove\n\n\n  // todo add filers for N types of projects\n  return (\n    <>\n      <Link to='/'>\n        <Typography>\n          <Button color='primary'>&lt; Back</Button>\n        </Typography>\n      </Link>\n\n      <Grid container justify='center'>\n        <Grid item xs={8} md={8} lg={8}>\n          <Paper>\n          <div\n            style={{\n            width: '960px',\n            height: '800px',\n          }}>\n\n          <Tooltip title='Reset zoom'>\n            <IconButton disabled={max === null && min === null} onClick={resetBrush} aria-label=\"reset zoom\" color=\"primary\">\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n\n            <ReactChart data={currentSelection} axes={axes} series={series} primaryCursor={{showLabel: true}} tooltip brush={brush} />\n          </div>\n          {/* <button onClick={handleToggle}>{toggle === true ? 'Hide JSON' : 'Show JSON'}</button> */}\n          {toggle && <pre>{JSON.stringify(currentSelection, null, 2)}</pre> }\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function PayloadField({ history }) {\n\n  const [payload, setPayload] = React.useState('');\n\n  const handlePayload = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('handlePayload...')\n    history.push({\n      pathname: '/chart',\n      state: JSON.parse(payload)\n    })\n  };\n  const resetPayload = () => setPayload('');\n\n  return (\n    <>\n      <Grid item xs={2} md={2} lg={2} />\n        <Grid item align='center' xs={8} md={8} lg={8}>\n          <form onSubmit={handlePayload}>\n            <TextField\n              multiline\n              variant=\"outlined\"\n              fullWidth\n              label='Webhook JSON'\n              onChange={e => setPayload(e.target.value)}\n              value={payload}\n              rows={8}\n              placeholder=\"Paste Webhook delivery payload here....\" />\n            <br />\n              <Button type='submit' disabled={payload !== '' ? false : true} color='primary'>\n                  Chart Webhook Deliveries\n              </Button>\n              <Button onClick={resetPayload} type='reset' color='secondary'>Cancel</Button>\n          </form>\n        </Grid>\n      <Grid item xs={2} md={2} lg={2} />\n    </>\n  );\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\n\nimport { Chart } from './Chart';\nimport PayloadField from './PayloadField';\n\n\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify='center' alignItems=\"center\" spacing={2}>\n\n        <Grid item xs={12} md={12} lg={12}>\n          <Typography align='center' variant=\"h3\">\n          Chart Procore Webhook Deliveries\n          </Typography>\n        </Grid>\n\n        <Router>\n          <Switch>\n            <Route exact path='/' component={PayloadField} />\n            <Route path='/chart' component={Chart} />\n          </Switch>\n        </Router> \n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}