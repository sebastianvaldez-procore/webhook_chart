{"version":3,"sources":["ResizableBox.js","Chart.js","PayloadField.js","App.js","reportWebVitals.js","index.js"],"names":["ResizableBox","children","width","height","resizable","style","className","Chart","props","React","useState","dateTicks","setDateTicks","currentSelection","setCurrenSelection","min","max","setBrushState","deliveries","location","state","useEffect","events","map","id","completed_at","response_status","event","started_at","finalData","time_total","Date","parse","primary","timestamp","secondary","radius","dates","moments","d","moment","startDate","endDate","range","currDate","startOf","lastDate","add","diff","push","clone","toISOString","dateRanges","e","label","data","axes","useMemo","type","position","hardMin","hardMax","series","brush","onSelect","brushData","Math","start","end","Grid","container","direction","alignContent","justify","spacing","xs","md","lg","to","Typography","Button","color","item","alignItems","Tooltip","title","IconButton","component","disabled","onClick","aria-label","align","padding","primaryCursor","showLabel","tooltip","defaultValues","WebhookPayload","PayloadField","history","jsonError","setJsonError","useForm","handleSubmit","control","reset","onSubmit","console","log","pathname","JSON","name","rules","validate","json","error","stringify","as","TextField","helperText","placeholder","multiline","variant","fullWidth","rows","useStyles","makeStyles","theme","root","flexGrow","App","classes","CssBaseline","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mUAIe,SAASA,EAAT,GAOX,IANFC,EAMC,EANDA,SAMC,IALDC,aAKC,MALO,IAKP,MAJDC,cAIC,MAJQ,IAIR,MAHDC,iBAGC,aAFDC,aAEC,MAFO,GAEP,EADDC,EACC,EADDA,UAEA,OACE,8BACGF,EACC,cAAC,eAAD,CAAmBF,MAAOA,EAAOC,OAAQA,EAAzC,SACE,qBACEE,MAAK,2BACAA,GADA,IAEHH,MAAO,OACPC,OAAQ,SAEVG,UAAWA,EANb,SAQGL,MAIH,qBACEI,MAAK,aACHH,MAAM,GAAD,OAAKA,EAAL,MACLC,OAAO,GAAD,OAAKA,EAAL,OACHE,GAELC,UAAWA,EANb,SAQGL,MCNN,SAASM,EAAMC,GAAQ,IAAD,EACGC,IAAMC,UAAS,GADlB,gCAESD,IAAMC,SAAS,KAFxB,mBAEnBC,EAFmB,KAERC,EAFQ,OAGsBH,IAAMC,SAAS,IAHrC,mBAGnBG,EAHmB,KAGDC,EAHC,OAIWL,IAAMC,SAAS,CACnDK,IAAK,KACLC,IAAK,OANoB,0BAIlBD,EAJkB,EAIlBA,IAAKC,EAJa,EAIbA,IAAOC,EAJM,KAQrBC,EAAaV,EAAMW,SAASC,MAClCX,IAAMY,WAAU,WAEd,IAAMC,EAASJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,gBAAiBC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,WAA7C,mBAAC,aAAgEJ,KAAIC,eAAcC,mBAAoBC,GAAvG,IAA8GC,kBAGtIC,EACNP,EAAOC,KAAI,SAACI,GAEV,OADAA,EAAMG,YAAeC,KAAKC,MAAML,EAAMF,cAAgBM,KAAKC,MAAML,EAAMC,aAAe,IAC/E,aAAEK,QAAS,IAAIF,KAAKJ,EAAMO,WAAYC,UAAWR,EAAMG,WAAYM,OAA4B,IAAnBT,EAAMG,YAAsBH,KAC7G,IAEJf,EApCJ,SAAoByB,GASlB,IARA,IAAMC,EAAUD,EAAMd,KAAI,SAAAgB,GAAC,OAAIC,IAAOD,MAChCE,EAAYD,IAAOzB,IAAIuB,GACvBI,EAAUF,IAAOxB,IAAIsB,GAEvBK,EAAQ,GACRC,EAAWJ,IAAOC,GAAWI,QAAQ,OACrCC,EAAWN,IAAOE,GAASG,QAAQ,OAEjCD,EAASG,IAAI,EAAG,QAAQC,KAAKF,GAAY,GAC3CH,EAAMM,KAAKL,EAASM,QAAQC,eAGhC,OAAOR,EAwBHS,CAAW9B,EAAOC,KAAI,SAAA8B,GAAC,OAAIA,EAAEnB,eAG/BpB,EAAmB,CAAC,CAACwC,MAAO,oBAAqBC,KAAM1B,OACtD,CAACX,IAEJ,IAAMsC,EAAO/C,IAAMgD,SACjB,iBAAM,CACJ,CACExB,SAAS,EACTyB,KAAM,MACNC,SAAU,SAEVC,QAAS7C,EACT8C,QAAS7C,GAEb,CAAE0C,KAAM,SAAUC,SAAU,WAC3B,CAAChD,EAAWI,EAAKC,IAEd8C,EAASrD,IAAMgD,SAAQ,iBAAO,CAAEC,KAAM,YAAa,IAEnDK,EAAQtD,IAAMgD,SAClB,iBAAO,CACLO,SAAU,SAACC,GACThD,EAAc,CACZF,IAAKmD,KAAKnD,IAAIkD,EAAUE,MAAOF,EAAUG,KACzCpD,IAAKkD,KAAKlD,IAAIiD,EAAUE,MAAOF,EAAUG,WAI/C,IAKF,OACE,mCACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAASC,QAAQ,SAASC,QAAS,EAAnF,UACE,cAACL,EAAA,EAAD,CAAMM,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAxB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,0BAIR,cAACZ,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACC,WAAW,SAASV,QAAQ,aAAaE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGH,QAAS,EAA5F,SACE,cAACL,EAAA,EAAD,CAAMa,MAAI,EAACP,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACE,cAACO,EAAA,EAAD,CAASC,MAAM,aAAf,SACE,cAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,SAAkB,OAARxE,GAAwB,OAARD,EAAc0E,QAf7D,kBAAMxE,EAAc,CAACF,IAAK,KAAMC,IAAK,QAe6C0E,aAAW,aAAaT,MAAM,UAAvH,SACE,cAAC,IAAD,YAQR,cAACZ,EAAA,EAAD,CAAMa,MAAI,EAACS,MAAM,SAAShB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA9C,SACE,cAAC7E,EAAD,CAAcE,MAAM,MAAMG,MAAO,CAAEuF,QAAS,SAA5C,SACE,cAAC,QAAD,CAAYrC,KAAM1C,EAAkB2C,KAAMA,EAAMM,OAAQA,EAAQ+B,cAAe,CAACC,WAAW,GAAOC,SAAO,EAAChC,MAAOA,a,qBCrEvHiC,G,OAAgB,CACpBC,eAAgB,KAGH,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAAW,EACZ1F,IAAMC,SAAS,MADH,mBACxC0F,EADwC,KAC7BC,EAD6B,OAEPC,YAAQ,CAACN,kBAA1CO,EAFwC,EAExCA,aAAcC,EAF0B,EAE1BA,QAASC,EAFiB,EAEjBA,MA0B/B,OACE,mCACA,eAACpC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMa,MAAI,EAACP,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC3B,cAACR,EAAA,EAAD,CAAMa,MAAI,EAACS,MAAM,SAAShB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,uBAAM6B,SAAUH,GAbF,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,eACtBU,QAAQC,IAAI,mBAAoBX,GAChCE,EAAQlD,KAAK,CACX4D,SAAU,SACVzF,MAAO0F,KAAK9E,MAAMiE,QASd,UACE,cAAC,IAAD,CACEc,KAAK,iBACLP,QAASA,EACTQ,MAAO,CACLC,SAlCM,SAAAC,GAClB,IAEE,GAAKJ,KAAK9E,MAAMkF,GAEd,OADAb,EAAa,OACN,EAEP,MAAMa,EAGV,MAAMC,GAGJ,OAFAR,QAAQC,IAAIE,KAAKM,UAAUD,EAAO,KAAM,IACxCd,GAAa,IACN,KAuBCgB,GACE,cAACC,EAAA,EAAD,CACAH,MAAOf,EACPmB,WAAYnB,EAAY,iBAAmB,GAC3CoB,YAAY,0CACZC,WAAS,EACTC,QAAQ,WACRC,WAAS,EACTrE,MAAM,eACNsE,KAAM,MAIV,uBACE,cAAC5C,EAAA,EAAD,CAAQtB,KAAK,SAASuB,MAAM,UAA5B,sCAGA,cAACD,EAAA,EAAD,CAAQS,QAAS,WACfgB,EAAMT,GACNK,EAAa,OACZ3C,KAAK,QAAQuB,MAAM,YAHtB,yBAMR,cAACZ,EAAA,EAAD,CAAMa,MAAI,EAACP,GAAI,EAAGC,GAAI,EAAGC,GAAI,SCnGnC,IAAMgD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,OA8BCC,MA1Bf,WACE,IAAMC,EAAUN,IAChB,OACE,qCACE,cAACO,EAAA,EAAD,IACA,sBAAK9H,UAAW6H,EAAQH,KAAxB,UACA,cAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,SAASU,WAAW,SAAST,QAAS,EAA9D,SACE,cAACL,EAAA,EAAD,CAAMa,MAAI,EAACP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACE,cAACE,EAAA,EAAD,CAAYY,MAAM,SAAS+B,QAAQ,KAAnC,kDAMF,cAAC,IAAD,CAAQW,SAAUC,iBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIjD,UAAWW,IACjC,cAAC,IAAD,CAAOsC,KAAK,SAASjD,UAAWhF,IAChC,cAAC,IAAD,CAAOkI,OAAS,kBAAM,cAAC1D,EAAA,EAAD,CAAY2C,QAAQ,KAApB,2CCrBnBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.99d35f54.chunk.js","sourcesContent":["import React from 'react';\nimport { ResizableBox as ReactResizableBox } from \"react-resizable\";\nimport \"react-resizable/css/styles.css\";\n\nexport default function ResizableBox({\n  children,\n  width = 500,\n  height = 300,\n  resizable = true,\n  style = {},\n  className\n}) {\n  return (\n    <div>\n      {resizable ? (\n        <ReactResizableBox width={width} height={height}>\n          <div\n            style={{\n              ...style,\n              width: \"100%\",\n              height: \"100%\"\n            }}\n            className={className}\n          >\n            {children}\n          </div>\n        </ReactResizableBox>\n      ) : (\n          <div\n            style={{\n              width: `${width}px`,\n              height: `${height}px`,\n              ...style\n            }}\n            className={className}\n          >\n            {children}\n          </div>\n        )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Chart as ReactChart } from 'react-charts'\nimport moment from 'moment'\n\nimport ResizableBox from \"./ResizableBox\";\n\n\nfunction dateRanges(dates) {\n  const moments = dates.map(d => moment(d))\n  const startDate = moment.min(moments)\n  const endDate = moment.max(moments)\n \n  var range = [];\n  var currDate = moment(startDate).startOf('day');\n  var lastDate = moment(endDate).startOf('day');\n\n  while(currDate.add(1, 'days').diff(lastDate) < 0) {\n      range.push(currDate.clone().toISOString());\n  }\n\n  return range;\n}\n\nexport function Chart(props) {\n  const [ toggle, setToggle ] = React.useState(false)\n  const [ dateTicks, setDateTicks ] = React.useState([])\n  const [ currentSelection, setCurrenSelection ] = React.useState({})\n  const [{ min, max }, setBrushState] = React.useState({\n    min: null,\n    max: null,\n  });\n  const deliveries = props.location.state \n  React.useEffect(() => {\n    // id, completed_at, response_status, event, started_at\n    const events = deliveries.map(({ id, completed_at, response_status, event, started_at }) => ({ id, completed_at, response_status, ...event, started_at }))\n\n    // create a duration key calculated from completed_at and start_at, return object that with keys for axsis\n    const finalData =\n    events.map((event) => {\n      event.time_total =  (Date.parse(event.completed_at) - Date.parse(event.started_at)) / 1000\n      return { primary: new Date(event.timestamp), secondary: event.time_total, radius: (event.time_total * 1.5), ...event }\n    } , {})\n\n    setDateTicks(\n      dateRanges(events.map(e => e.timestamp))\n    )\n\n    setCurrenSelection([{label: 'webhook durations', data: finalData}])\n  }, [deliveries])\n  \n  const axes = React.useMemo(\n    () => [\n      {\n        primary: true,\n        type: 'utc',\n        position: 'bottom',\n        // tickValues: dateTicks,\n        hardMin: min,\n        hardMax: max,\n      },\n    { type: 'linear', position: 'left' },\n  ], [dateTicks, min, max])\n\n  const series = React.useMemo(() => ({ type: 'bubble' }), [])\n\n  const brush = React.useMemo(\n    () => ({\n      onSelect: (brushData) => {\n        setBrushState({\n          min: Math.min(brushData.start, brushData.end),\n          max: Math.max(brushData.start, brushData.end),\n        });\n      },\n    }),\n    []\n  );\n\n  const resetBrush = () => setBrushState({min: null, max: null})\n  // todo add filers for N types of projects\n  return (\n    <>\n      <Grid container direction='column' alignContent='center' justify='center' spacing={2}>\n        <Grid xs={8} md={8} lg={8}>\n          <Link to='/'>\n              <Typography>\n                <Button color='primary'>&lt; Back</Button>\n              </Typography>\n          </Link>\n        </Grid>\n        <Grid container item alignItems='center' justify='flex-start' xs={3} md={3} lg={3} spacing={2}>\n          <Grid item xs={4} md={4} lg={4}>\n            <Tooltip title='Reset zoom'>\n              <IconButton component='div' disabled={max === null && min === null} onClick={resetBrush} aria-label=\"reset zoom\" color=\"primary\">\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip> \n          </Grid>\n          {/* <Grid item xs={8} md={8} lg={8}>\n          </Grid> */}\n        </Grid>\n\n        <Grid item align='center' xs={12} md={12} lg={12}>\n          <ResizableBox width='900' style={{ padding: '.5rem'}}>\n            <ReactChart data={currentSelection} axes={axes} series={series} primaryCursor={{showLabel: true}} tooltip brush={brush} />\n          </ResizableBox>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { Controller, useForm } from 'react-hook-form'\nimport { verify } from 'verify-json'\n\nconst webhookSchema = `\n[\n  {\n    \"event\": {\n      \"user_id\": integer,\n      \"timestamp\": string,\n      \"resource_name\": string,\n      \"resource_id\": integer,\n      \"project_id\": integer,\n      \"id\": integer,\n      \"ulid\": string,\n      \"event_type\": string,\n      \"company_id\": integer,\n      \"api_version\": string,\n      \"metadata\": {\n        \"source_user_id\": integer,\n        \"source_company_id\": integer,\n        \"source_project_id\": integer,\n        \"source_application_id\": string,\n        \"source_operation_id\": string\n      }\n    },\n    \"event_id\": integer,\n    \"outcome\": string,\n    \"response_body\": string,\n    \"response_error\": string,\n    \"started_at\": string,\n    \"completed_at\": string,\n    \"response_status\": integer,\n    \"response_headers\": {}\n  }\n]\n`\n\nconst defaultValues = {\n  WebhookPayload: ''\n}\n\nexport default function PayloadField({ history }) {\n  const [ jsonError, setJsonError ] = React.useState(null)\n  const { handleSubmit, control, reset } = useForm({defaultValues})\n\n  const isValidJson = json => {\n    try {\n      \n      if ( JSON.parse(json) ) {\n        setJsonError(null)\n        return true\n      } else {\n        throw(json)\n      }\n    }\n    catch(error) {\n      console.log(JSON.stringify(error, null, 2))\n      setJsonError(true)\n      return false\n    }\n  }\n  const handlePayload = ({WebhookPayload}) => {\n    console.log('handlePayload...', WebhookPayload)\n    history.push({\n      pathname: '/chart',\n      state: JSON.parse(WebhookPayload)\n    })\n  };\n\n  return (\n    <>\n    <Grid container>\n      <Grid item xs={2} md={2} lg={2} />\n        <Grid item align='center' xs={8} md={8} lg={8}>\n          <form onSubmit={handleSubmit(handlePayload)}>\n            <Controller\n              name=\"WebhookPayload\"\n              control={control}\n              rules={{\n                validate: isValidJson\n              }}\n              as={\n                <TextField\n                error={jsonError}\n                helperText={jsonError ? 'Not valid JSON' : ''}\n                placeholder=\"Paste Webhook delivery payload here....\" \n                multiline\n                variant=\"outlined\"\n                fullWidth\n                label='Webhook JSON'\n                rows={8}\n                />                \n              }\n            />\n            <br />\n              <Button type='submit' color='primary'>\n                  Chart Webhook Deliveries\n              </Button>\n              <Button onClick={() => {\n                reset(defaultValues)\n                setJsonError(null)\n              }} type='reset' color='secondary'>Cancel</Button>\n          </form>\n        </Grid>\n      <Grid item xs={2} md={2} lg={2} />\n    </Grid>\n    </>\n  );\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Chart } from './Chart';\nimport PayloadField from './PayloadField';\n\nconst useStyles = makeStyles(theme => ({ \n  root: {\n    flexGrow: 1\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.root}>\n      <Grid container justify='center' alignItems=\"center\" spacing={1}>\n        <Grid item xs={12} md={12} lg={12}>\n          <Typography align='center' variant=\"h3\">\n          Chart Procore Webhook Deliveries\n          </Typography>\n        </Grid>\n      </Grid>\n\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path='/' component={PayloadField} />\n            <Route path='/chart' component={Chart} />\n            <Route render={ () => <Typography variant='h2'>404 Not found.</Typography>} />\n          </Switch>\n        </Router> \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}